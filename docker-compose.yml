

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: pedidos_db
      MYSQL_USER: app
      MYSQL_PASSWORD: apppass
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - observability

  python-api:
    build: ./python-api
    container_name: python-api
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - OTEL_EXPORTER_OTLP_INSECURE=true
      - OTEL_SERVICE_NAME=python-api
      - DB_HOST=mysql
      - DB_USER=app
      - DB_PASS=apppass
      - DB_NAME=pedidos_db
    depends_on:
      - mysql
      - otel-collector
    networks:
      - observability

  node-api:
    build: ./node-api
    container_name: node-api
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=otel-collector:4317
      - OTEL_SERVICE_NAME=node-api
      - PYTHON_API=http://python-api:5000
    depends_on:
      - python-api
      - otel-collector
    ports:
      - '4000:4000'
    networks:
      - observability


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    networks:
      - observability

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - '3100:3100'
    networks:
      - observability

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    user: root       # mantém o usuário não-root, se quiser segurança
    volumes:
      - tempo_data:/tempo-data
      - ./configs/tempo-config.yaml:/etc/tempo/config.yaml:ro
    command:
      - "-config.file=/etc/tempo/config.yaml"
      - "-config.expand-env=true"
    ports:
      - "3200:3200"
      - "4318:4318"
    networks:
      - observability
  
  
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - observability


  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    volumes:
      - ./configs/otel-config.yaml:/etc/otel-collector-config.yaml:ro
    command:
      - '--config=/etc/otel-collector-config.yaml'
    ports:
      - '4317:4317'
      - '55680:55680'
      - '8888:8888' # Collector self-telemetry & health
      - '8889:8889' # Prometheus metrics endpoint
    depends_on:
      - cadvisor
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    depends_on:
      - prometheus
      - loki
      - tempo
    ports:
      - '3000:3000'
    networks:
      - observability

volumes:
  mysql_data:
  tempo_data:
    driver: local

networks:
  observability:
    driver: bridge
